#  Copyright 2024 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

# Usage: promtail_image.yml
promtail_image_name: "promtail"
promtail_image_tag: "latest"
image_creation_retries: 20

# Usage: k8s_loki_pod.yml
loki_k8s_name: loki
loki_port: 3100
loki_image_name: docker.io/grafana/loki
loki_image_tag: 2.4.1
package_retry: 10

# Usage: configure_loki_grafana
pod_timeout: 30m
grafana_namespace: grafana
grafana_k8s_name: grafana
url_retries: 10
grafana_url_unreachable_fail_msg: "Failed. grafana url http://{{ grafana_svc_ip.stdout }}:{{ grafana_svc_port.stdout }} is not reachable.
Please retry aftter grafana url is reachable. If facing this issue again, please cleanup and rerun the the playbook"
grafana_pod_wait_fail_msg: "Execution failed as the grafana pods did not start within the expected time.
Please re-run the playbook after verifying that the grafana pods are in running state by executing the command 'kubectl get pods -A.'"
loki_pod_wait_fail_msg: "Execution failed as the loki pods did not start within the expected time.
Please re-run the playbook after verifying that the loki pods are in running state by executing the command 'kubectl get pods -A.'"

# Usage enable_buildkit.yml
image_retries: 5
delay_time: 10
local_repo_config_path: "{{ role_path }}/../../../input/local_repo_config.yml"
buildkit_dir: "{{ repo_store_path }}/cluster/git/buildkit"

# Usage prereq.yml
telemetry_json_path: "{{ role_path }}/../../../input/config/{{ ansible_distribution | lower }}/{{ ansible_distribution_version }}/telemetry.json"
sources_list_dest: /etc/apt/sources.list.d
docker_repo_temp: templates/docker_repo.j2
dir_mode: "755"
file_mode: "0644"
keyringsfile: /etc/apt/keyrings
docker_repo: https://download.docker.com/linux/centos/docker-ce.repo
docker_packages_ubuntu:
 - docker-ce={{ epoch_version }}
 - docker-ce-cli={{ epoch_version }}
 - docker-buildx-plugin
docker_packages_redhat:
 - docker-ce-{{ docker_version }}
 - docker-ce-cli-{{ docker_version }}
 - docker-buildx-plugin
cert_packages:
 - curl
 - ca-certificates
gpg_path: /etc/apt/keyrings/docker.asc
docker_gpg_url: https://download.docker.com/linux/ubuntu/gpg
repo_retries: 5
repo_delay: 10
docker_update_repos_fail_msg: "Failed to update the docker repositories. Please ensure that the docker repositories are accessible
from the Omnia Infrastructure Manager and re-run the playbook."
clean_apt_cache_fail_msg: "Failed to clean the apt cache. Please ensure there are no lock files present and try running the playbook again."
ubuntu_docker_package_missing: "Failed to extract the version from the docker-ce-cli package. Please ensure that the docker-ce-cli package is present in the telemetry.json file, and that it includes a version. For example, the entry in the telemetry.json file for Ubuntu 24.04 should resemble: 'docker-ce-cli=5:27.3.1-1~ubuntu.24.04~noble'."   # noqa: yaml[line-length]
redhat_docker_package_missing: "Failed to extract the version from the docker-ce-cli package. Please ensure that the docker-ce-cli package is present in the telemetry.json file, and that it includes a version. For example, the entry in the telemetry.json file should resemble: 'docker-ce-cli-24.0.4-1.el8'."   # noqa: yaml[line-length]

# Usage: configure_docker_proxy.yml
docker_file_mode: "0600"
docker_config_src: "{{ role_path }}/templates/docker_json.j2"
docker_config_dest: "/root/.docker/config.json"
docker_service_dest: "/etc/systemd/system/docker.service.d"
docker_http_proxy_conf_src: "{{ role_path }}/templates/docker_http_proxy_conf.j2"
docker_auth_folder: "/root/.docker/"
docker_dir_mode: "700"

# Usage: docker_login.yml
docker_login_fail_msg: "Docker login failed. Please ensure the docker login credentials in the input/provision_config_credentials.yml are valid.
If they are, this error can occur due to a pull limit issue or multiple requests. Please try running the playbook again after waiting for a while."
